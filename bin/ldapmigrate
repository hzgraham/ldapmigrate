#!/usr/bin/env python

import argparse
import getpass
from ldapmigrate.ldapMigrateUsers import ldapMigrateUsers
from ldapmigrate.PromptAction import PromptAction

LDAP_HOST = []
LDAP_MOD_HOST = []
LDAP_BASE_DN = []
search_entry  = []
password = []
lookup_host = []

if __name__ == "__main__":
    ldapMigrate = ldapMigrateUsers()
    login = getpass.getuser()
    parser = argparse.ArgumentParser(description='Migrate users and groups between envs.')

    parser.add_argument('entry',
                        # required=True,
                        # action="store_true",
                        metavar="Entry",
                        help='the entry being migrated, for example uid=cplanet or "cn=captain planet"')


    subparsers = parser.add_subparsers(help='sub-command help')
    #Refresh subparser for migrating entries to lower environments such as Dev
    parser_migrate = subparsers.add_parser('migrate',
                                           help='Migrating users to lower environments')
    parser_migrate.add_argument('--src-host','-s',
                                required=True,
                                dest='host',
                                help='enter the LDAP Master uri for example: ldapmaster.example.com')
    parser_migrate.add_argument('--dest-host','-d',
                                required=True,
                                dest='mod_host',
                                help='enter the LDAP uri of the lower level LDAP Master, example: ldap.example.com')
    parser_migrate.add_argument('--basedn','-b',
                                required=True,
                                dest='basedn',
                                help='The search base for LDAP for example: dc=example,dc=com')
    parser_migrate.add_argument('--password', metavar='password', \
                                    dest='password', \
                                    nargs='*', \
                                    required=True, \
                                    action=PromptAction, \
                                    help='Plain text password for user')
    
    #Promote subparser for promoting entries up through environments towards Prod
    # parser_promote = subparsers.add_parser('promote',
    #                                        help='Move entries from lower env up towards Prod')
    # parser_promote.add_argument('-cn', '--name',
    #                             dest='full_name',
    #                             help='search for the user by first and last name in quotes')
    # parser_promote.add_argument('-e', '--env',
    #                             required=True,
    #                             help="The environment to promote to")
    # parser_promote.add_argument('-s','--src-host',
    #                             required=True,
    #                             dest='host',
    #                             help='enter the LDAP Master uri for example: ldapmaster.example.com')
    # parser_promote.add_argument('-d','--dest-host',
    #                             required=True,
    #                             dest='mod_host',
    #                             help='enter the LDAP uri of the lower level LDAP Master, example: ldap.example.com')
    # parser_promote.add_argument('--basedn','-b',
    #                             required=True,
    #                             dest='basedn',
    #                             help='The search base for LDAP for example: dc=example,dc=com')
    # parser_promote.add_argument('--password', metavar='password', \
    #                                 dest='password', \
    #                                 nargs='*', \
    #                                 required=True, \
    #                                 action=PromptAction, \
    #                                 help='Plain text password for user')

    parser_lookup = subparsers.add_parser('lookup',
                                          help='Check the entry before attempting to move it')
    parser_lookup.add_argument('--src-host','-m',
                                required=True,
                                dest='lookup_host',
                                help='enter the LDAP source host uri for example: ldap.example.com')
    parser_lookup.add_argument('--basedn','-b',
                                required=True,
                                dest='basedn',
                                help='The search base for LDAP for example: dc=example,dc=com')
    parser_lookup.add_argument('--password', metavar='password', \
                                    dest='password', \
                                    nargs='*', \
                                    required=True, \
                                    action=PromptAction, \
                                    help='Plain text password for user')
    #parser_lookup.set_defaults(func=user_migrate.lookup_user)


    args = parser.parse_args()
    if 'host' in args:
        LDAP_HOST = args.host
    if 'mod_host' in args:
        LDAP_MOD_HOST = args.mod_host
    LDAP_BASE_DN = args.basedn
    search_entry  = args.entry
    password = args.password[0]
    if 'lookup_host' in args:
        LDAP_HOST = args.lookup_host

    if not args:
        parser.print_help()
        sys.exit(1)

    user_name = None
    pw = None
    # user_migrate = ldapMigrateUsers(args)
    user_migrate = ldapMigrateUsers(login=login, ldap_host=LDAP_HOST, ldap_mod_host=LDAP_MOD_HOST, ldap_base_dn=LDAP_BASE_DN, password=password)
    if LDAP_MOD_HOST:
        print "Doing modifications"
        user_migrate.migrate_user(search_entry)
    # elif 'lookup_host' in args:
    #     print search_entry
    #     print "Doing a pure lookup"
    #     args.func(args)
    elif 'lookup_host' in args:
        print "Doing a pure lookup"
        user_migrate.list_attribs(args)
